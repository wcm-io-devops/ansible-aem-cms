- name: Create AEM group.
  group:
    name: "{{ aem_cms_group }}"
    state: present

- name: Create AEM user.
  user:
    name: "{{ aem_cms_user }}"
    group: "{{ aem_cms_group }}"
    append: yes
    system: yes
    state: present

- name: Create AEM folder.
  file:
    path: "{{ aem_cms_home }}"
    state: directory

- name: Create AEM license.
  copy:
    src: license.properties
    dest: "{{ aem_cms_home }}/license.properties"
    owner: "{{ aem_cms_user }}"

- name: Check whether AEM quickstart was already downloaded.
  stat:
    path: "{{ aem_cms_download_path }}/{{ aem_cms_quickstart_name }}"
  register: aem_cms_quickstart_file

- name: Download AEM quickstart.
  include: "download/{{ aem_cms_install_source }}.yml"
  when: not aem_cms_quickstart_file.stat.exists or
        (aem_cms_quickstart_sha1 is defined and
        (aem_cms_quickstart_sha1 | lower) != aem_cms_quickstart_file.stat.checksum)

- name: Unpack AEM.
  shell: "java -jar {{ aem_cms_download_path }}/{{ aem_cms_quickstart_name }} -unpack -b {{ aem_cms_home }}"
  args:
    creates: "{{ aem_cms_home }}/crx-quickstart/app/cq-quickstart-{{ aem_cms_version }}-standalone-quickstart.jar"

- name: Remove downloaded AEM quickstart.
  file:
    path: "{{ aem_cms_download_path }}/{{ aem_cms_quickstart_name }}"
    state: absent
  when: aem_cms_remove_download

- name: Set permissions.
  command: "chown -c -R {{aem_cms_user}}:{{ aem_cms_group }} '{{ aem_cms_home }}'"
  args:
    warn: false
  register: permissions_result
  changed_when: "permissions_result.stdout != \"\""

- name: Setup AEM systemd unit.
  include: systemd.yml
  when: ansible_service_mgr == 'systemd'

- name: Setup AEM init script.
  include: sysvinit.yml
  when: ansible_service_mgr == 'sysvinit' or ansible_service_mgr == 'upstart' or ansible_service_mgr == 'service'

- name: Setup crx-quickstart/install.
  include: quickstart_install.yml
  when: aem_cms_quickstart_install_fileglob is defined

- name: Setup i386 support for XMPFilesProcessor.
  include: xmp_i386.yml
  when: ansible_architecture == 'x86_64'